name: CI  # Continuous Integration Workflow

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Save virtual environment
        run: echo "VIRTUAL_ENV=$(python -c 'import sys; print(sys.prefix)')" >> $GITHUB_ENV

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}

      - name: Activate virtual environment
        run: echo "VIRTUAL_ENV=$(python -c 'import sys; print(sys.prefix)')" >> $GITHUB_ENV

      - name: Install Pytest (if missing)
        run: pip install pytest  # ✅ Ensures pytest is installed

      - name: Run Tests
        run: pytest --cov=src --cov-report=term-missing || true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Aydin-ab/cardwise

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}

      - name: Activate virtual environment
        run: echo "VIRTUAL_ENV=$(python -c 'import sys; print(sys.prefix)')" >> $GITHUB_ENV

      - name: Install Ruff (if missing)
        run: pip install ruff  # ✅ Ensures ruff is installed

      - name: Run Ruff (Lint & Format Check)
        run: ruff check .

  type-check:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}

      - name: Activate virtual environment
        run: echo "VIRTUAL_ENV=$(python -c 'import sys; print(sys.prefix)')" >> $GITHUB_ENV

      - name: Install Pyright (if missing)
        run: pip install pyright  # ✅ Ensures pyright is installed

      - name: Run Pyright
        run: pyright

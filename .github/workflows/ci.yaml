name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  pytest:
    name: Pytest & Codecov (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pipx install poetry

      - name: Install Dependencies
        run: poetry install  # Faster install, no unnecessary build

      - name: Run Tests
        run: poetry run pytest --cov=src --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Aydin-ab/cardwise

  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ruff (if missing)
        run: pip install ruff  # âœ… Install only Ruff, no need for full Poetry setup

      - name: Run Ruff (Lint & Bandit)
        run: ruff check .

      - name: Run Ruff (Format)
        run: ruff format

  pyright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Adapt to Poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: 'poetry'
      - name: Install dependencies
        run: | 
          poetry install
          echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      - name: Run Pyright
        uses: jakebailey/pyright-action@v2


  pip-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 'Generate requirements.txt with poetry'
        run: |
          pipx install poetry
          pipx inject poetry poetry-plugin-export
          poetry export --without-hashes --format=requirements.txt > requirements.txt

      - name: 'Run pip-audit'
        uses: pypa/gh-action-pip-audit@v1.1.0
        with:
          inputs: requirements.txt

  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.

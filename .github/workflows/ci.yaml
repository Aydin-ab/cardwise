name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pytest:
    name: Pytest & Codecov (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Continue with other versions if one fails
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Setup python and poetry
        uses: aydin-ab/setup-python-poetry-action@v1.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Tests
        run: poetry run pytest --cov=src --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Aydin-ab/cardwise

  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ruff
        uses: astral-sh/ruff-action@v3

      - name: Run ruff
        run: |
          ruff check --fix
          ruff format

  pyright:
    runs-on: ubuntu-latest
    steps:
      - name: Setup python and poetry
        uses: aydin-ab/setup-python-poetry-action@v1.1.0

      - name: Add poetry bin to PATH (to use the pyright action)
        run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      - name: Run Pyright
        uses: jakebailey/pyright-action@v2
        with:
          pylance-version: latest-release

  pip-audit:
    runs-on: ubuntu-latest
    steps:        
      - name: Setup python and poetry
        uses: aydin-ab/setup-python-poetry-action@v1.1.0

      - run: poetry export --without-hashes --output requirements.txt

      - name: 'Run pip-audit'
        uses: pypa/gh-action-pip-audit@v1.1.0
        with:
          inputs: requirements.txt

  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts

  release:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Setup | Checkout Repository on Release Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
          
      - name: Action | Semantic Version Release
        id: release
        # Adjust tag with desired version if applicable.
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v9.21.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

